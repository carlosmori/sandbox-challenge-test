@mixin flexContainer($direction, $justify, $align) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}
@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($y / $x) * 100 + '%');
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}
// @include responsive-ratio(16,9);
$breakpoints: (
  'phone': 480px,
  'tablet': 768px,
  'tablet-wide': 1024px,
  'desktop': 1248px,
  'desktop-wide': 1440px,
);
@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}
// @include mq('tablet-wide') {
//     padding-top: 4rem;
//     font-size: 2.4rem;
// }

@mixin hidden {
  display: none;
  visibility: hidden;
}
@mixin visible($state: 'block') {
  display: unquote($state);
  visibility: visible;
}

@mixin unselectable {
  -webkit-touch-callout: none;
  user-select: none;
}
